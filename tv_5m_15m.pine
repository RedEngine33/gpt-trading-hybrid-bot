//@version=6
indicator("MTF GPT Router (5m with 15m filter)", overlay=true)
emaLen1 = input.int(9, "EMA Fast")
emaLen2 = input.int(20,"EMA Slow")
rsiLen  = input.int(14,"RSI Length")
atrLen  = input.int(14,"ATR Length")
tv_secret = "abc123!@#"

emaFast = ta.ema(close, emaLen1)
emaSlow = ta.ema(close, emaLen2)
rsi     = ta.rsi(close, rsiLen)
atrVal  = ta.atr(atrLen)

emaFast_htf = request.security(syminfo.tickerid, "15", ta.ema(close, emaLen1))
emaSlow_htf = request.security(syminfo.tickerid, "15", ta.ema(close, emaLen2))
rsi_htf     = request.security(syminfo.tickerid, "15", ta.rsi(close, rsiLen))

longCond  = ta.crossover(emaFast, emaSlow) and rsi > 55 and emaFast_htf > emaSlow_htf and rsi_htf > 50
shortCond = ta.crossunder(emaFast, emaSlow) and rsi < 45 and emaFast_htf < emaSlow_htf and rsi_htf < 50

plot(emaFast, color=color.orange)
plot(emaSlow, color=color.blue)
plotshape(longCond,  title="Long",  color=color.green,  style=shape.labelup,   text="L")
plotshape(shortCond, title="Short", color=color.red,    style=shape.labeldown, text="S")

mkjson(setup) =>
    '{"secret":"' + tv_secret + '", "text":"' + syminfo.ticker + '", "setup":"' + setup + '", ' +
    '"price":' + str.tostring(close) + ', "ema9":' + str.tostring(emaFast) + ', "ema20":' + str.tostring(emaSlow) + ', ' +
    '"rsi":' + str.tostring(rsi) + ', "atr":' + str.tostring(atrVal) + ', "tf":"5m"}'

if (longCond)
    alert(mkjson("strong_long"), alert.freq_once_per_bar_close)
if (shortCond)
    alert(mkjson("strong_short"), alert.freq_once_per_bar_close)
