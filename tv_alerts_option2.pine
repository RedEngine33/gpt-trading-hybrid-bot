//@version=6
indicator("TV -> GPT Router (EMA9/20 + RSI14 + ATR)", overlay=true)

ema9  = ta.ema(close, 9)
ema20 = ta.ema(close, 20)
rsi   = ta.rsi(close, 14)
atr   = ta.atr(14)

longCond  = ta.crossover(ema9, ema20)  and rsi > 55 and close > ema9
shortCond = ta.crossunder(ema9, ema20) and rsi < 45 and close < ema9
setup     = longCond ? "strong_long" : shortCond ? "strong_short" : "neutral"

secret = input.string(defval="abc123!@#", title="Webhook Secret")

json = '{"secret":"' + secret + '","text":"' + syminfo.ticker + '","metrics":{' +
       '"tf":"'    + timeframe.period + '",' +
       '"close":'  + str.tostring(close) + ',' +
       '"ema9":'   + str.tostring(ema9)  + ',' +
       '"ema20":'  + str.tostring(ema20) + ',' +
       '"rsi":'    + str.tostring(rsi)   + ',' +
       '"atr":'    + str.tostring(atr)   + ',' +
       '"setup":"' + setup + '"}}'

// Send only when signal exists
if (longCond or shortCond)
    alert(json, freq=alert.freq_once_per_bar_close)

plot(ema9,  color=color.new(color.green, 0), title="EMA9")
plot(ema20, color=color.new(color.orange, 0), title="EMA20")
plotshape(longCond,  style=shape.triangleup,   color=color.new(color.green, 0),  size=size.tiny, title="LONG",  location=location.belowbar, text="L")
plotshape(shortCond, style=shape.triangledown, color=color.new(color.red, 0),    size=size.tiny, title="SHORT", location=location.abovebar, text="S")
